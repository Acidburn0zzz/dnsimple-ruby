inherit_from: .rubocop_todo.yml

AllCops:
  Exclude:
    # Exclude .gemspec files because they are generally auto-generated
    - '*.gemspec'

# Generally, the keyword style uses a lot of space. This is particularly true when
# you use case/if statements, in combination with a long-name variable.
#
#   invoice_error_message = case error
#                           when 1 == 1
#                             do_something
#                           else
#                             do_else
#                           end
#
Lint/EndAlignment:
  AlignWith: variable

# [codesmell]
Metrics/AbcSize:
  Enabled: false

# [codesmell]
# I don't really get the point of this cop.
Performance/RedundantMerge:
  Enabled: false

# Double empty lines are useful to separate conceptually different methods
# in the same class or module.
Style/EmptyLines:
  Enabled: false

# In most cases, a space is nice. Sometimes, it's not.
# Just be consistent with the rest of the surrounding code.
Style/EmptyLinesAroundClassBody:
  Enabled: false

# In most cases, a space is nice. Sometimes, it's not.
# Just be consistent with the rest of the surrounding code.
Style/EmptyLinesAroundModuleBody:
  Enabled: false

# Array indentation should be considered like multi-line indentation
# and use 4 spaces instead of 2.
Style/IndentArray:
  IndentationWidth: 4

# Hash indentation should be considered like multi-line indentation
# and use 4 spaces instead of 2.
Style/IndentHash:
  IndentationWidth: 4

# unless is not always cool.
Style/NegatedIf:
  Enabled: false

# There are cases were the inline rescue is ok. We can either downgrade the severity,
# or rely on the developer judgement on a case-by-case basis.
Style/RescueModifier:
  Enabled: false

# It's nice to be consistent. The trailing comma also allows easy reordering,
# and doesn't cause a diff in Git when you add a line to the bottom.
Style/TrailingCommaInLiteral:
  EnforcedStyleForMultiline: consistent_comma
